@model DestinationDream.Models.State

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/ChildLayout.cshtml";
}

<script>
    $(document).ready(function () {

        LoadState(0);

        $("#Save").click(function () {
            LoadState(0);
            var obj = {
                "Id": $("#Id").val(),
                "Name": $("#Name").val(),
                "CountryId": $("#CountryId").val(),

            }
            $.ajax({
                "url": "/State/Save",
                "method": "post",
                "contentType": "application/json",
                "data": JSON.stringify(obj),

                success: function (data) {

                    alert(data.Message);
                    LoadState(0);
                },
                error: function (err) { console.log(err); }
            });


        });

        $("#btnRefresh").click(function () {
            LoadState(0);
        });

        $("#txtSearch").keyup(function () {
            $.ajax(
                {
                    "url": "/State/GetAll?key=" + $("#txtSearch").val(),
                    "method": "get",

                    success: function (data) {
                        if (data.Code == 0) {
                            $("#StateTable").empty();
                            $.each(data.Message, function (index, item) {
                                $("#StateTable").append("<tr><td><button onclick='Edit(" + item.Id + ")'>Edit</button><button onclick='Delete(" + item.Id + ")'>Delete</button></td><td>" + item.Id + "</td><td>" + item.Name + "</td><td>" + item.CountryId + "</td></tr>");
                            });
                        }
                    },
                    error: function (message) {
                        console.log(message);
                    }
                }
            );
        });

    });


    function LoadState(pageno) {

        $.ajax({

            "url": "/State/GetAllc?pageno=" + pageno,
            "method": "get",


            success: function (data) {

                if (data.Code == 0) {
                    $("#StateTable").empty();
                    $.each(data.Message, function (Add, item) {

                        previous = data.pageno - 1;
                        Next = data.pageno + 1;
                        if (previous == -1) {
                            previous = 0;
                        }

                        var next = data.pageno + 1;
                        $("#StateTable").append("<tr><td><button onclick='Edit(" + item.Id + ")'>Edit</button><button onclick='Delete(" + item.Id + ")'>Delete</button></td><td>" + item.Id + "</td><td>" + item.Name + "</td><td>" + item.CountryId + "</td></tr>");

                    });
                }
            },
            error: function (message) {

                console.log(message);



            }

        });


    }
    function Edit(id) {
        $.ajax({
            "url": "/State/find?Id=" + id,
            "method": "Post",
            success: function (rep) {

                
                if (rep.Code == 0) {


                    console.log(rep);
                    var obj = rep.Message
                 
                    $("#Id").val(obj.Id);
                    $("#Name").val(obj.Name);
                    $("#CountryId").val(obj.CountryId);


                }
            },
            error: function (err) {
                console.log(err);
            }
        });
    }
    function Delete(id) {

        if (confirm("Are you sure?")) {

            $.ajax({

                "url": "/State/Delete?id=" + id,
                "method": "get",
                success: function (rep) {
                    console.log(rep);
                    alert(rep.Message);
                    LoadState(0);
                },
                error: function (err) {
                    console.log(err);
                }
            });

        }

    }

</script>


<div class="row">
    <div class="col-1">

    </div>

    <div class="col-4">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal" id="hhh">
                <br />
                <h4><b>States</b></h4>
                <hr />
                <br />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })

                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.CountryId, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CountryId, (IEnumerable<SelectListItem>)ViewBag.msg, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-4">

                    </div>
                    <div class="col-4">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-5 m-2">
                                <input type="button" id="Save" value="Add" class="btn btn-success" />
                            </div>
                        </div>
                        <div class="col-4">

                        </div>
                    </div>
                </div>
                <br />
            </div>
        }
    </div>



    <div class="col-7">
        <div class="container">
            <div class="row">
                <div class="col-1">

                </div>
                <div class="col-2">
                    <br />
                    <button class="btn btn-danger" id="btnRefresh">Refresh</button>
                </div>
                <div class="col-7">
                    <br />
                    <input type="search" id="txtSearch" value="" />
                </div>
            </div>
            <br />
            <div class="container">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Operations</th>
                            <th>Id</th>
                            <th>Name</th>
                            <th>Country</th>

                        </tr>
                    </thead>
                    <tbody id="StateTable"></tbody>
                </table>

            </div>
        </div>
    </div>
</div>

<div class="row">

    <div class="col-12 text-right">
        @{
            <a onclick="LoadState(previous) " class="btn btn-danger">previous</a>
            int totaln = (int)TempData.Peek("count");
            for (int i = 0; i <= totaln / 4; i++)
            {
                int total = i + 1;
                <a onclick="LoadState( @i)" class="btn btn-danger">@total</a>

            }
            <a onclick="LoadState(Next)" class="btn btn-danger">Next</a>

        }


    </div>

</div>